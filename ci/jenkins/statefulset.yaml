apiVersion: v1
kind: Service
metadata:
  name: jenkins-master
spec:
  type: ClusterIP
  selector:
    app: jenkins-master
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: jnlp
    port: 50000
    targetPort: 50000
--- 
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jenkins-master
spec:
  serviceName: 'jenkins'
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-master
  template:
    metadata:
      labels:
        app: jenkins-master
    spec:
      serviceAccountName: jenkins
      containers:
      - name: jenkins
        image: localhost:5000/constellation/jenkins-master
        imagePullPolicy: Always
        env:
          - name: JAVA_OPTS
            value: "-Djenkins.install.runSetupWizard=false"
            #
          - name: SECRETS
            value: "/run/secrets"
            #
          - name: CASC_JENKINS_CONFIG
            value: "/cfg/jenkins.yaml"
        ports:
          - name: http-port
            containerPort: 8080
          - name: jnlt-port
            containerPort: 50000
        volumeMounts:
          - name: jenkins-storage
            mountPath: /var/jenkins_home
          #
          - name: jenkins-config
            mountPath: /cfg/jenkins.yaml
            subPath: jenkins-config.yaml 
            readOnly: true
          #
          - name: nexus-secrets
            mountPath: /run/secrets/DEPLOYER_PASSWORD
            subPath: deployer-password
            readOnly: true
          #
          - name: jenkins-secrets
            mountPath: /run/secrets/JENKINS_ADMIN_PASSWORD
            subPath: jenkins-admin-password
            readOnly: true
      volumes:
        - name: jenkins-config
          configMap:
              name: 'jenkins-config'
        - name: nexus-secrets
          secret:
              secretName: nexus-secrets 
        - name: jenkins-secrets
          secret:
              secretName: jenkins-secrets 
      securityContext:
        fsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      name: jenkins-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi

--- 
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: jenkins-ingress
spec:
  rules:
    - host: jenkins.minikube
      http:
        paths:
          - path: /
            backend:
              serviceName: jenkins-master       
              servicePort: http